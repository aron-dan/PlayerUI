<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        +lDDJ66ajLx2aEOhmSf97drGyKTz7y5/kvcAAMDC7T9JHZOZT9Bvn3lwLrO8XBY6WP0gzbpHGyNP9cyO
        dMvjZhm5z5cydjuOzheTxor52sbIofXmnqIfLwEAQFnpasT+k9Um9zbPPb7D1LykJ6k3yx29GlLF2IWN
        1ecut4lJT+3TF79JjZLUuEmfc6LG3K1T3+4Moj/MlWOn3t04+psPUmLSoT7+3f+72NSxc3UmJgEAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9MGv
        fvU/+Pgg7PSBYlwAAAAASUVORK5CYII=
</value>
  </data>
</root>